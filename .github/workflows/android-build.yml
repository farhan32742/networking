name: Build Kivy APK (Buildozer)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ runner.temp }}/android-sdk
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show repo files
        run: ls -la

      - name: Setup system packages
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            build-essential git zip unzip openjdk-17-jdk wget \
            libffi-dev libssl-dev libbz2-dev libsqlite3-dev \
            libncurses5-dev libncursesw5-dev libreadline-dev zlib1g-dev \
            liblzma-dev python3-pip python3-setuptools python3-wheel

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pip packages (buildozer + deps)
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade cython
          pip install buildozer==1.4.6

      - name: Install Android commandline tools, SDK, NDK and accept licenses
        run: |
          export ANDROID_HOME=${{ runner.temp }}/android-sdk
          export ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk
          mkdir -p $ANDROID_HOME
          cd $ANDROID_HOME

          # download commandline tools zip
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip

          # unzip (creates cmdline-tools/)
          unzip -q cmdline-tools.zip

          # Move unpacked contents into the expected layout: cmdline-tools/latest/...
          mkdir -p cmdline-tools-temp
          mv cmdline-tools/* cmdline-tools-temp/ || true
          rm -rf cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools-temp/* cmdline-tools/latest/
          rmdir cmdline-tools-temp || true

          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          # Accept licenses (must run before installs)
          yes | sdkmanager --licenses

          # Install platform-tools, platform API 28 (your buildozer.spec android.api=28),
          # a stable build-tools and a compatible NDK
          sdkmanager "platform-tools" "platforms;android-28" "build-tools;30.0.3" "ndk;21.4.7075529"

      - name: Ensure env variables for build
        run: |
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=${{ runner.temp }}/android-sdk/cmdline-tools/latest/bin:${{ runner.temp }}/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Show installed sdk components
        run: |
          ${{ runner.temp }}/android-sdk/cmdline-tools/latest/bin/sdkmanager --list

      - name: Run Buildozer (build APK)
        run: |
          export ANDROID_HOME=${{ runner.temp }}/android-sdk
          export ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          # debug build (use android debug). make sure buildozer.spec is in repo root
          buildozer -v android debug

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifacts
          path: bin/*.apk
